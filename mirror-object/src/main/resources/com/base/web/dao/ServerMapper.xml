<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.base.web.dao.ServerMapper">
    <resultMap id="ServerResultMap" type="com.base.web.bean.Server">
        <id property="id" column="u_id" javaType="Long" jdbcType="BIGINT"/>
        <result property="name" column="name" javaType="String" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="note" column="note" javaType="String" jdbcType="VARCHAR"/>
        <result property="serverIp" column="ip" javaType="String" jdbcType="VARCHAR"/>
        <result property="serverPort" column="port" javaType="Integer" jdbcType="INTEGER"/>
        <result property="deviceList" column="deviceList" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>
    <!--用于动态生成sql所需的配置-->
    <sql id="config">
        <bind name="resultMapId" value="'ServerResultMap'"/>
        <bind name="tableName" value="'t_server'"/>
    </sql>

    <insert id="insert" parameterType="com.base.web.bean.common.InsertParam">
        <include refid="config"/>
        <include refid="BasicMapper.buildInsertSql"/>
    </insert>

    <delete id="delete" parameterType="com.base.web.bean.common.DeleteParam">
        <include refid="config"/>
        <include refid="BasicMapper.buildDeleteSql"/>
    </delete>

    <update id="update" parameterType="com.base.web.bean.common.UpdateParam">
        <include refid="config"/>
        <include refid="BasicMapper.buildUpdateSql"/>
    </update>

    <select id="selectByPk" parameterType="Long" resultMap="ServerResultMap">
        select * from t_server where u_id=#{u_id}
    </select>

    <select id="select" parameterType="com.base.web.bean.common.QueryParam" resultMap="ServerResultMap">
        <include refid="config"/>
        <include refid="BasicMapper.buildSelectSql"/>
    </select>

    <select id="total" parameterType="com.base.web.bean.common.QueryParam" resultType="int">
        <include refid="config"/>
        <include refid="BasicMapper.buildTotalSql"/>
    </select>

    <select id="queryServer" parameterType="com.base.web.bean.common.QueryParam" resultMap="ServerResultMap">
        SELECT ts.u_id,ts.name,ts.create_time,ts.note,ts.ip,ts.`port`,GROUP_CONCAT(td.`code`,',') AS deviceList
        FROM t_server ts
        LEFT JOIN t_server_device tsd ON tsd.server_id = ts.u_id
        LEFT JOIN t_device td ON td.u_id = tsd.device_id
        <if test="terms.size > 0">
            WHERE ts.name LIKE #{terms[0].value}
        </if>
        LIMIT #{pageIndex},#{pageSize}
    </select>

    <select id="queryServerTotal" parameterType="com.base.web.bean.common.QueryParam" resultType="int">
        SELECT COUNT(ts.u_id)
        FROM t_server ts
        LEFT JOIN t_server_device tsd ON tsd.server_id = ts.u_id
        LEFT JOIN t_device td ON td.u_id = tsd.device_id
        <if test="terms.size > 0">
            WHERE ts.name LIKE #{terms[0].value}
        </if>
    </select>

    <!--查询服务器详情-->
    <select id="queryServerInfo" parameterType="Long" resultType="com.base.web.bean.Server">
        SELECT ts.note,GROUP_CONCAT(td.`code`,",") AS deviceList
        FROM t_server_device tsd,t_device td,t_server ts
        WHERE tsd.device_id = td.u_id AND tsd.server_id = #{id}
    </select>

    <!--查询没设防的设备和已关联的设备-->
    <select id="queryCamera" parameterType="Long" resultType="com.base.web.bean.Camera">
        SELECT td.u_id AS id, td.`code`,td.`status` FROM t_device td WHERE td.`status` = 0
        UNION  ALL
        SELECT td.u_id, td.`code`,td.`status` FROM t_device td,t_server_device tsd
        WHERE td.u_id = tsd.device_id AND tsd.server_id = #{id}
    </select>

    <update id="updateCameraStatus">
        UPDATE t_device
        <trim prefix="SET" suffixOverrides=",">
            <trim prefix="status =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when `status` = #{status} then #{status}
                </foreach>
            </trim>
        </trim>
        where u_id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </update>

    <delete id="deleteServer" parameterType="Long">
        DELETE FROM t_server WHERE u_id = #{id}
        DELETE FROM t_server_device WHERE server_id = #{id}
    </delete>

</mapper>

